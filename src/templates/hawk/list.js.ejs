import React, { Component } from 'react'
import { routerActions } from 'react-router-redux'
import { bindActionCreators } from 'redux'
import { connect } from 'react-redux'
import css from 'react-css-modules'
import moment from 'moment'
import * as _ from 'lodash'

import Panel from 'components/panel'
import Table from 'components/table'
import SearchBar from 'components/searchbar'
import ButtonRow from 'components/buttonRow'

import tableConfig from './components/tableConfig'

import {
  fetch<%= props.project %>List,
  fetch<%= props.project %>Info
} from './redux/list'
import styles from './index.scss'

@css(styles)
@connect(
  state => ({
    <%= props.projectName %>List: state.<%= props.projectName %>State.list.data,
  }),
  dispatch => ({
    actions: bindActionCreators(routerActions, dispatch),
    dispatch: dispatch
  })
)
export default class <%= props.project %>List extends Component {
  constructor() {
    super()
    this.state = {
    }
  }

  /** ------------------- 列表搜索 ----------------------*/

  onSearch = (searchFields) => {
    this.loadList()
  }

  onTableChange = (currentPage) => {
    this.loadList(currentPage)
  }

  loadList = (currentPage = 1) => {
    const { <%= props.projectName %>List } = this.props
    // eslint-disable-next-line
    const fields = _(this.search.state.fields).omitBy(_.isNull).omitBy(_.isUndefined).omitBy(value => value === '').value()

    const beginTime = fields.beginTime
      ? moment(fields.beginTime).utcOffset(8).startOf('day').valueOf()
      : ''
    const endTime = fields.endTime
      ? moment(fields.endTime).utcOffset(8).endOf('day').valueOf()
      : ''
    
    const query = Object.assign({}, fields, {
      currentPage: currentPage || <%= props.projectName %>List.currentPage,
      pageSize: <%= props.projectName %>List.pageSize,
      beginTime,
      endTime,
    })

    this.props.dispatch(
      fetch<%= props.project %>List(query)
    )
  }

  /**
   * 搜索项
   */
  searchFields = () => tableConfig.searchFields()

  /** ------------------- 表格操作 ----------------------*/

  /**
   * 列表表格配置
   */
  tableHeaders = () => tableConfig.tableHeaders.call(this, {
    edit: this.edit
  })

  /**
   * 操作按钮
   */
  buttonRowFields = () => tableConfig.buttonRowFields(this, {
    onClickImport: this.onClickImport,
    onClickExport: this.onClickExport,
    onClickMultiRetreat: this.onClickMultiRetreat
  })

  render() {
    const { <%= props.projectName %>List } = this.props
    return (
      <Panel>
        <SearchBar
          onSubmit={this.onSearch}
          fields={this.searchFields()}
          ref={(r) => { this.search = r }}
        />
        <ButtonRow
          fields={this.buttonRowFields()}
        />
        <Table
          onChange={page => this.onTableChange(page)}
          header={this.tableHeaders()}
          pageSize={<%= props.projectName %>List.pageSize}
          total={<%= props.projectName %>List.totalCount}
          currentPage={<%= props.projectName %>List.currentPage}
          data={<%= props.projectName %>List.list}
        />
      </Panel>
    )
  }
}